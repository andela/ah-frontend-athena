// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test like buttons Test if like and dislike buttons mount 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LikesButtons
    like={[Function]}
    likes_count=""
    onClick={[MockFunction]}
    onClick2={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <t
        fluid={false}
        tag="div"
      >
        <t
          className="flex"
          tag="div"
        >
          <t
            className="offset-md-3"
            lg={null}
            md="3"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <span
              className=""
            >
              
            </span>
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip=""
              icon="thumbs-up"
              id="likeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip="horizontal"
              icon="thumbs-down"
              id="unlikeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
          </t>
        </t>
      </t>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          className="flex"
          tag="div"
        >
          <t
            className="offset-md-3"
            lg={null}
            md="3"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <span
              className=""
            >
              
            </span>
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip=""
              icon="thumbs-up"
              id="likeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip="horizontal"
              icon="thumbs-down"
              id="unlikeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
          </t>
        </t>,
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            className="offset-md-3"
            lg={null}
            md="3"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <span
              className=""
            >
              
            </span>
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip=""
              icon="thumbs-up"
              id="likeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
            <t
              border={false}
              brand={false}
              className=""
              fab={false}
              fal={false}
              far={false}
              fixed={false}
              flip="horizontal"
              icon="thumbs-down"
              id="unlikeBtn"
              inverse=""
              light={false}
              list={false}
              onClick={[MockFunction]}
              pull=""
              pulse={false}
              regular={false}
              rotate=""
              size="2x"
              spin={false}
              stack=""
            />
          </t>,
          "className": "flex",
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <span
                className=""
              >
                
              </span>,
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip=""
                icon="thumbs-up"
                id="likeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />,
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip="horizontal"
                icon="thumbs-down"
                id="unlikeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />,
            ],
            "className": "offset-md-3",
            "lg": null,
            "md": "3",
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "",
              },
              "ref": null,
              "rendered": "",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "border": false,
                "brand": false,
                "className": "",
                "fab": false,
                "fal": false,
                "far": false,
                "fixed": false,
                "flip": "",
                "icon": "thumbs-up",
                "id": "likeBtn",
                "inverse": "",
                "light": false,
                "list": false,
                "onClick": [MockFunction],
                "pull": "",
                "pulse": false,
                "regular": false,
                "rotate": "",
                "size": "2x",
                "spin": false,
                "stack": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "border": false,
                "brand": false,
                "className": "",
                "fab": false,
                "fal": false,
                "far": false,
                "fixed": false,
                "flip": "horizontal",
                "icon": "thumbs-down",
                "id": "unlikeBtn",
                "inverse": "",
                "light": false,
                "list": false,
                "onClick": [MockFunction],
                "pull": "",
                "pulse": false,
                "regular": false,
                "rotate": "",
                "size": "2x",
                "spin": false,
                "stack": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <t
          fluid={false}
          tag="div"
        >
          <t
            className="flex"
            tag="div"
          >
            <t
              className="offset-md-3"
              lg={null}
              md="3"
              sm={null}
              tag="div"
              xl={null}
              xs={null}
            >
              <span
                className=""
              >
                
              </span>
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip=""
                icon="thumbs-up"
                id="likeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip="horizontal"
                icon="thumbs-down"
                id="unlikeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
            </t>
          </t>
        </t>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            className="flex"
            tag="div"
          >
            <t
              className="offset-md-3"
              lg={null}
              md="3"
              sm={null}
              tag="div"
              xl={null}
              xs={null}
            >
              <span
                className=""
              >
                
              </span>
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip=""
                icon="thumbs-up"
                id="likeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip="horizontal"
                icon="thumbs-down"
                id="unlikeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
            </t>
          </t>,
          "fluid": false,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <t
              className="offset-md-3"
              lg={null}
              md="3"
              sm={null}
              tag="div"
              xl={null}
              xs={null}
            >
              <span
                className=""
              >
                
              </span>
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip=""
                icon="thumbs-up"
                id="likeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
              <t
                border={false}
                brand={false}
                className=""
                fab={false}
                fal={false}
                far={false}
                fixed={false}
                flip="horizontal"
                icon="thumbs-down"
                id="unlikeBtn"
                inverse=""
                light={false}
                list={false}
                onClick={[MockFunction]}
                pull=""
                pulse={false}
                regular={false}
                rotate=""
                size="2x"
                spin={false}
                stack=""
              />
            </t>,
            "className": "flex",
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <span
                  className=""
                >
                  
                </span>,
                <t
                  border={false}
                  brand={false}
                  className=""
                  fab={false}
                  fal={false}
                  far={false}
                  fixed={false}
                  flip=""
                  icon="thumbs-up"
                  id="likeBtn"
                  inverse=""
                  light={false}
                  list={false}
                  onClick={[MockFunction]}
                  pull=""
                  pulse={false}
                  regular={false}
                  rotate=""
                  size="2x"
                  spin={false}
                  stack=""
                />,
                <t
                  border={false}
                  brand={false}
                  className=""
                  fab={false}
                  fal={false}
                  far={false}
                  fixed={false}
                  flip="horizontal"
                  icon="thumbs-down"
                  id="unlikeBtn"
                  inverse=""
                  light={false}
                  list={false}
                  onClick={[MockFunction]}
                  pull=""
                  pulse={false}
                  regular={false}
                  rotate=""
                  size="2x"
                  spin={false}
                  stack=""
                />,
              ],
              "className": "offset-md-3",
              "lg": null,
              "md": "3",
              "sm": null,
              "tag": "div",
              "xl": null,
              "xs": null,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "className": "",
                },
                "ref": null,
                "rendered": "",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "border": false,
                  "brand": false,
                  "className": "",
                  "fab": false,
                  "fal": false,
                  "far": false,
                  "fixed": false,
                  "flip": "",
                  "icon": "thumbs-up",
                  "id": "likeBtn",
                  "inverse": "",
                  "light": false,
                  "list": false,
                  "onClick": [MockFunction],
                  "pull": "",
                  "pulse": false,
                  "regular": false,
                  "rotate": "",
                  "size": "2x",
                  "spin": false,
                  "stack": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "border": false,
                  "brand": false,
                  "className": "",
                  "fab": false,
                  "fal": false,
                  "far": false,
                  "fixed": false,
                  "flip": "horizontal",
                  "icon": "thumbs-down",
                  "id": "unlikeBtn",
                  "inverse": "",
                  "light": false,
                  "list": false,
                  "onClick": [MockFunction],
                  "pull": "",
                  "pulse": false,
                  "regular": false,
                  "rotate": "",
                  "size": "2x",
                  "spin": false,
                  "stack": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
